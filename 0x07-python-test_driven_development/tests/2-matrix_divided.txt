The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------


Import function from module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test a list of integers and div is an integer:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test a list of negative integers and div is an integer:
        >>> matrix = [[1, -2, 3], [4, 5, -6]]
        >>> print(matrix_divided(matrix, 3))
        [[0.33, -0.67, 1.0], [1.33, 1.67, -2.0]]

Test a list of floats and div is an integer:
        >>> matrix = [[1.3, 2.4, 3.5], [4.1, 5.2, 6.6]]
        >>> print(matrix_divided(matrix, 3))
        [[0.43, 0.8, 1.17], [1.37, 1.73, 2.2]]

Test a list of floats and div is zero:
        >>> matrix = [[1.3, 2.4, 3.5], [4.1, 5.2, 6.6]]
        >>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test different length lists and div is an integer::
        >>> matrix = [[1, 2, 3], [4, 5]]
        >>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Test different length lists and div is an integer::
        >>> matrix = [[1, 2, 'o'], [4, 5, 'i']]
        >>> print(matrix_divided(matrix, 3))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats
